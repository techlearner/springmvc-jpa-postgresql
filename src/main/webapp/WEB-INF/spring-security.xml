<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">
    
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login" filters="none" />
        <intercept-url pattern="/logout" filters="none" />
        <intercept-url pattern="/signup**" filters="none" />
        <intercept-url pattern="/resources/**" filters="none" />
        <intercept-url pattern="/favicon**" filters="none" />
        <intercept-url pattern="/" access="hasAnyRole('ROLE_USER','ROLE_MANAGER')"/>
        <intercept-url pattern="/**" access="isAuthenticated()" />
        <form-login login-page="/login" default-target-url="/"
            authentication-failure-url="/loginfailed" />
        <logout logout-success-url="/logout" />
        <session-management invalid-session-url="/sessiontimeout" >
            <concurrency-control max-sessions="1" />
        </session-management>
    </http>
    <!-- 
    <beans:bean id="sessionFixationProtectionStrategy" 
    	class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />
     -->
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
           				users-by-username-query="
              			select username,password,enabled
              			from users where username=?"
           				authorities-by-username-query="
						select u.username, r.rolename from users u, role r
              			where u.role_roleid = r.roleid and u.username =?  " />
        </authentication-provider>
    </authentication-manager>
</beans:beans>